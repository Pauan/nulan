#! /usr/bin/env node
"use strict";

// http://stackoverflow.com/a/8808162/449477
var vm = require("vm")
var fs = require("fs")
function load(path, context) {
  var data = fs.readFileSync(path, "utf8")
  vm.runInThisContext(data, path)
}

load("./NULAN.js")

load("./lib/PARSE.js")
load("./NULAN.parse.js")


var util = require("util")

// TODO: move into NULAN.js
function transform(x) {
  if (Array.isArray(x)) {
    return x.map(transform)
  } else if (x instanceof NULAN.Symbol || x instanceof NULAN.Bypass || x instanceof NULAN.Wrapper) {
    return x.value
  } else if (typeof x === "string") {
    return "\"" + x + "\""
  } else {
    return x
  }
}

function foo(a) {
  a.forEach(function (x) {
    try {
      x = transform(NULAN.parse(x + "\n"))
      //x.forEach(function (x) {
        console.log(util.inspect(x, false, null, true))
      //})
    } catch (e) {
      console.error("" + e)
    }
    console.log()
  })
}

foo(["foo 123\n  bar 2 3)\n  corge 60 70\n\nqux 5 10\n",
     "(foobar",
     "foobar)",
     "(foobar +",
     "+ 5",
     "1 + 2 3 + 4",
     "foo 1 2 3 4 5",
     "foo 1 2 3\n  bar 3 4 5",
     "foo 1 2 3\n  bar 3 4 5\n  qux 10 20 30",
     "foo 1 2 3\n  bar 3 4 5\n    qux 10 20 30\n  nou yes 10",
     "foo 1 2 3\n\nbar 1 2 3",
     "foo 1 2 3\n  bar 1 2 3\n\n  qux 1 2 3\ncorge 1 2 3\n\nyesnou",
     "mac isnt -> @args\n  # TODO: special case for 2-arguments\n  '~(is ,@args)",
     "mac str -> @args\n  '(+) \"\" ,@args",
     "foo\n  .bar",
     "foo\n  .bar 10 20\n  .qux 10 20\n  .corge 10 20",
     "foo\n  .bar 1 2 3\n  .qux 5 10 20\n  .corge",
     "foo 10 20\nfoo\n  .bar 1 2 3\n  .qux 5 10 20\n  .corge",
     "foo 10\n  bar\n    .qux 20 30\n    .corge 40 50",
     "| foo 1 2 3\n| bar\n| qux 7 8 9\n  | yes 10 12 12\n  | test 13 14 15",
     "foo 1 2 3\n  | bar\n  | qux 7 8 9\n    | yes 10 12 12\n    | test 13 14 15",
     "foo | bar | qux",
     "[ foo -> a a\n| bar -> b b ]",
     "{ foo | bar | qux }",
     "{ -> a a\n| -> b b\n| -> c c }",
     "( -> a a\n| -> b b\n| -> c c )",
     "( (-> a a) (-> b b) (-> c c) )",
     "-> a\n  | a + 1\n  | a + 2",
     "->\n  -> a a",
     "'foo bar 'qux corge",
     "#|foobar#quxcorge|#1 + 5",
     "#|foobar#|#1 + 5",
     "#|foobar#|quxcorge|#1 + 5",
     "#|foobar#|qux|#corge|#1 + 5",
     "foo 1 2 3 <= bar 10 20",
     "foo <= bar 10 20",
     "foo <= bar",
     "{(id -foo)}",
     "[(bar 10 - 50) {1 + 2 bar}]",
     "(1 - 5)",
     "{1 - 5}",
     "[1 - 5]",

     "( foo",
     "foo )",
     "( ( foo )",
     "( foo ) )",
     "( foo [ ) ]",
     "( ( foo ) bar ( qux ) )",

     "'| foo\n | bar\n | qux",
     "'foo\n bar\n qux",
     "'foo\n  bar\n  qux",

     "'| foo 1 2\n | bar 3 4\n | qux 5 6",
     "'foo 1 2\n bar 3 4\n qux 5 6",
     "'foo 1 2\n  bar 3 4\n  qux 5 6",

     "'foo 1 2 3",
     "'foo",
     ])

// ( foo 10 ( ( bar.qux 20 30 ) . corge 40 50 ) )

/*
require("./lib/cli").create().on("input", function (s) {
  try {
    console.log(util.inspect(transform(NULAN.parse(s)), false, null, true))
  } catch (e) {
    console.error(e)
  }

  console.log()
})*/
