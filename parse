#! /usr/bin/env node
"use strict";

// http://stackoverflow.com/a/8808162/449477
var vm = require("vm")
var fs = require("fs")
function load(path, context) {
  var data = fs.readFileSync(path, "utf8")
  vm.runInThisContext(data, path)
}

load("./NULAN.js")

load("./lib/PARSE.js")
load("./NULAN.parse.js")

load("./lib/NUIT.parse.js")


var util = require("util")

// TODO: move into NULAN.js
function transform(x) {
  if (Array.isArray(x)) {
    return x.map(transform)
  } else if (x instanceof NULAN.Symbol || x instanceof NULAN.Bypass || x instanceof NULAN.Wrapper) {
    return x.value
  } else if (typeof x === "string") {
    return "\"" + x + "\""
  } else {
    return x
  }
}

function foo(a) {
  a.forEach(function (x) {
    try {
      x = transform(NULAN.parse(x + "\n"))
      //x.forEach(function (x) {
        console.log(util.inspect(x, false, null, true))
      //})
    } catch (e) {
      console.error("" + e)
    }
    console.log()
  })
}

fs.readFile("test/parse", "utf8", function (err, s) {
  foo(NUIT.parse(s))
})

// ( foo 10 ( ( bar.qux 20 30 ) . corge 40 50 ) )

/*
require("./lib/cli").create().on("input", function (s) {
  try {
    console.log(util.inspect(transform(NULAN.parse(s)), false, null, true))
  } catch (e) {
    console.error(e)
  }

  console.log()
})*/
