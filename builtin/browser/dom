(IMPORT (file "../list")
  List)

(IMPORT (file "../text")
  Text)

(IMPORT (file "../null")
  Null)

(IMPORT (file "../task")
  Task)

(IMPORT (file "../maybe")
  Maybe)

(IMPORT (file "../changing")
  Changing)

(IMPORT (file "../changing-list")
  Changing-List)

(IMPORT (file "../mutable")
  Mutable
  set!)

(IMPORT (file "../unique")
  Unique)

(IMPORT (file "../percent")
  Percent)


(TYPE Easing-Step
  *step-start
  *step-end)

(TYPE Easing
  *linear
  *ease
  *ease-in
  *ease-in-out
  *ease-out
  (*steps Integer Easing-Step)
  (*cubic-bezier Number Number Number Number))

# The records are inlined into the data constructors
(TYPE Animation-State
  (*play { duration :: Number
           easing :: Easing })
  (*reverse { duration :: Number
              easing :: Easing }))

(TYPE Animation
  (*animate-set Unique Animation-State)
  (*animate-insert Unique Animation-State)
  (*animate-update Unique Animation-State)
  (*animate-remove Unique Animation-State))


(TYPE Style)
(TYPE Event)
(TYPE Attribute)
(TYPE Html)
(TYPE DOM-Element)
(TYPE Frame)


(UNSAFE-FFI-LOAD { target <= javascript-browser
                   file <= "../../ffi/browser/dom.js" }
  global_stylesheet :: (-> Text (List Style) (Task Null))
  stylesheet :: (-> Unique (List Style) (Task Null))
  keyframes :: (-> Unique (List Frame) (Task Null))

  frame :: (-> Percent (List Style) Frame)

  style :: (-> Text Text Style)
  changing_style :: (-> Text (Changing (Maybe Text)) Style)

  event :: (-> Text (-> { element :: DOM-Element }
                      (Task Null))
             Event)

  on_left_click :: (-> (-> { element :: DOM-Element }
                         (Task Null))
                     Event)

  on_mouse_hover :: (-> (-> { element :: DOM-Element
                              hovering :: Boolean }
                          (Task Null))
                      Event)

  on_mouse_hold :: (-> (-> { element :: DOM-Element
                             holding :: Boolean }
                         (Task Null))
                     Event)

  attr :: (-> Text Text Attribute)
  changing_attr :: (-> Text (Changing (Maybe Text)) Attribute)

  _class :: (-> Unique Attribute)
  changing_class :: (-> Unique (Changing Boolean) Attribute)

  # TODO this is inefficient if used when the DOM is dirty
  get_position :: (-> DOM-Element
                    (Task { left :: Number
                            top :: Number
                            width :: Number
                            height :: Number }))

  events :: (-> (List Event) Attribute)
  styles :: (-> (List Style) Attribute)

  parent :: (-> Text (List Attribute) (List Html) Html)
  changing_parent :: (-> Text (List Attribute) (Changing-List Html) Html)
  animated_parent :: (-> Text (List Animation) (List Attribute) (Changing-List Html) Html)

  child :: (-> Text (List Attribute) Html)

  text :: (-> Text Html)
  changing_text :: (-> (Changing Text) Html)

  # TODO make this into a Task ?
  root :: DOM-Element
  render :: (-> DOM-Element Html (Task Null)))


# TODO inline this ?
(FUNCTION on-mouse-hover-set! :: (-> (Mutable Boolean) Event)
  (on-mouse-hover-set! a)
  ~ (on-mouse-hover -> { hovering }
      (set! a hovering)))

# TODO inline this ?
(FUNCTION on-mouse-hold-set! :: (-> (Mutable Boolean) Event)
  (on-mouse-hold-set! a)
  ~ (on-mouse-hold -> { holding }
      (set! a holding)))


(FUNCTION visible :: (-> (Mutable Boolean) Attribute)
  (visible a)
  ~ (changing-attr "hidden"
      (transform a -> a
        (IF a
          *none
          (*some "")))))


(EXPORT-CONSTANT
  animate-set <= *animate-set
  animate-insert <= *animate-insert
  animate-update <= *animate-update
  animate-remove <= *animate-remove)

(EXPORT
  Style
  Event
  Attribute
  Html
  DOM-Element
  Animation
  Frame
  Easing-Step
  Easing

  step-start <= *step-start
  step-end <= *step-end

  linear <= *linear
  ease <= *ease
  ease-in <= *ease-in
  ease-in-out <= *ease-in-out
  ease-out <= *ease-out
  steps <= *steps
  cubic-bezier <= *cubic-bezier

  global-stylesheet <= global_stylesheet
  stylesheet
  keyframes

  frame

  style
  changing-style <= changing_style

  event
  on-left-click <= on_left_click
  on-mouse-hover <= on_mouse_hover
  on-mouse-hold <= on_mouse_hold

  attr
  changing-attr <= changing_attr

  class <= _class
  changing-class <= changing_class

  events
  styles

  parent
  changing-parent <= changing_parent
  animated-parent <= animated_parent

  child

  text
  changing-text <= changing_text

  get-position <= get_position

  root
  render

  on-mouse-hover-set!
  on-mouse-hold-set!

  visible)
