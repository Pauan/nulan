(IMPORT (nulan "unsafe/ffi")
| UNSAFE-FFI-LOAD
| javascript)

(IMPORT (file "null")
| Null)

(IMPORT (file "protocol")
| $transform
| transform

| $flatten
| flatten

| $yield
| yield

| $reduce-left
| reduce-left)

(IMPORT (file "list")
| List)


(REWRITE-RULE
| (DO ~a <= ~b ~c)
    &(flatten (transform ~b -> ~a ~c))

| (DO ~a ~b)
    &(flatten (transform ~a -> _ :: Null ~b))

| (DO ~a ~@b)
    &(DO ~a (DO ~@b)))

(REWRITE-RULE
| (DO-MATCH ~a ~@b)
    (WITH-UNIQUE c
      &(DO ~c <= ~a
           (MATCH ~c ~@b))))

(REWRITE-RULE
| (DO-IF ~test
  | ~then
  | ~else)
    (WITH-UNIQUE a
      &(DO ~a <= ~test
           (IF ~a
           | ~then
           | ~else))))

(UNSAFE-FFI-LOAD { target <= javascript
                 | file <= "../ffi/monad.js" }
| sequential :: (REQUIRE ($transform a) ($flatten a) ($yield a)
                  (-> (List (a b)) (a (List b)))))


(EXPORT
| sequential
| DO
| DO-MATCH
| DO-IF)
