(TYPE Boolean
  | *true
  | *false)

(FUNCTION not :: (-> Boolean Boolean)
  (not *true)
    *false
  (not *false)
    *true)

(REWRITE-RULE
  (IF test then else)
    &(MATCH ~test
       *true
         ~then
       *false
         ~else))

(REWRITE-RULE
  (AND a b)
    &(IF ~a ~b *false)
  (AND a @b)
    &(AND ~a (AND ~@b)))

(REWRITE-RULE
  (OR a b)
    &(IF ~a *true ~b)
  (OR a @b)
    &(OR ~a (OR ~@b)))


(EXPORT
  | Boolean
  | *true
  | *false
  | not
  | IF
  | AND
  | OR)
