#! /usr/bin/env node
"use strict";

var requirejs = require("./lib/r")

requirejs.config({
  nodeRequire: require
})

requirejs(["./src/options",
           "./src/builtins",
           "./src/util/parse",
           "./src/util/module",
           "./src/util/data",
           "./src/util/print"], function (options, a, b, c, d, e) {

  var builtins      = a.builtins
    , parseString   = b.parseString
    , Module        = c.Module
    , moduleImport  = c.moduleImport
    , moduleCompile = c.moduleCompile
    , moduleMacex   = c.moduleMacex
    , withNewEval   = d.withNewEval
    , simple        = e.simple

  function fromString(s) {
    var m = new Module()
    moduleImport(m, builtins, {})
    return withNewEval(function () {
      return moduleCompile(moduleMacex(m, parseString(s)))
    })
  }

  console.log(fromString("$import \"test/test\"\nbar 1"))

  //console.log(fromString("$require { resolve } = \"path\"\nvars a = 1\nvars a = 2"))
  
  //console.log(fromString("$require { resolve } = \"path\"\nresolve 1\n$import \"bar\" \"qux\"\nbar qux bar2\nvars foo = -> a a + 1\nfoo 1\nvars corge"))

  //console.log(fromString("vars bar qux\n$import \"bar\" except { bar = qux }\nvars foo = -> a a + 1\n\nprn foo qux"))
})