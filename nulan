#! /usr/bin/env node
"use strict";

var requirejs = require("./lib/r")

requirejs.config({
  nodeRequire: require
})

requirejs(["./lib/util/iter",
           "./src/options",
           "./src/builtins",
           "./src/print",
           "./src/0 data/vars",
           "./src/1 parse/tokenize",
           "./src/1 parse/indent",
           "./src/1 parse/parse",
           "./src/2 macex/macex",
           "./src/3 compile/module",
           "./src/3 replace/replace",
           "./src/3 compile/compile"], function (iter, options, a, b, c, d, e, f, g, h, i, j) {

  var builtins = a.builtins
    , print    = b.print
    , vars     = c.vars
    , tokenize = d.tokenize
    , indent   = e.indent
    , parse    = f.parse
    , macex    = g.macex
    , module   = h.module
    , replace  = i.replace
    , compile  = j.compile

  options.cwd = process.cwd()

  options.readFile = function (s) {
    return fs.readFileSync(s, "utf8")
  }

  function macex1(s) {
    var o = tokenize(s)
      , r = []

    iter.each(o, function (x) {
      x = indent(x)
      x = parse(x)
      //x = macex(x)
      r.push(x)
    })

    return r
  }

  function fromString(s) {
    return vars.reset(builtins, function () {
      return print(macex1(s))
      var r = macex1(s)
      r = module(r)
      r = replace(r)
      r = compile(r)
      return r
    })
  }

  console.log(fromString("import bar\nvars foo = 1\n\nprn foo bar"))
})